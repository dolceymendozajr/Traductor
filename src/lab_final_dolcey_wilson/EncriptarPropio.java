package lab_final_dolcey_wilson;
import java.util.Scanner;
import javax.swing.JOptionPane;

public class EncriptarPropio extends javax.swing.JFrame {
    MetodoEncript encripaa = new MetodoEncript();
    public EncriptarPropio() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_Encriptar = new javax.swing.JButton();
        txt_Clave = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_Mensaje = new javax.swing.JTextArea();
        txt_Encriptado = new javax.swing.JTextField();
        txt_ERROR = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_Encriptar.setText("Encriptar");
        btn_Encriptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EncriptarActionPerformed(evt);
            }
        });

        txt_Clave.setText("123");

        txt_Mensaje.setColumns(20);
        txt_Mensaje.setRows(5);
        txt_Mensaje.setText("lalalalalalalala encriptame");
        jScrollPane1.setViewportView(txt_Mensaje);

        txt_Encriptado.setText(":)");
        txt_Encriptado.setToolTipText("Texto encriptado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_Encriptado)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_Clave, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_ERROR, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(btn_Encriptar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Clave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Encriptar, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(txt_ERROR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addComponent(txt_Encriptado, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_EncriptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EncriptarActionPerformed
        txt_ERROR.setText("");
        int clave = 123;
        try {
            if (!txt_Clave.getText().isEmpty() && !txt_Mensaje.getText().isEmpty()) {
                try {
                    String cla = txt_Clave.getText();
                    clave = Integer.parseInt(cla);
                    if (clave <= 99 || clave >= 800) {
                        txt_ERROR.setText("La clave debe ser mayor que 99 y menor que 800");
                    } else {
                        try {
                        String frase = txt_Mensaje.getText();
                        String encriptado = encripaa.encrip(frase, clave);

                        txt_Encriptado.setText(encriptado);
                        } catch (Exception e) {
                        }
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "La clave solo puede ser números :)", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } else
                JOptionPane.showMessageDialog(rootPane, "No puedes dejar un campo vacío", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btn_EncriptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncriptarPropio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncriptarPropio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncriptarPropio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncriptarPropio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncriptarPropio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Encriptar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_Clave;
    private javax.swing.JLabel txt_ERROR;
    private javax.swing.JTextField txt_Encriptado;
    private javax.swing.JTextArea txt_Mensaje;
    // End of variables declaration//GEN-END:variables
}

class MetodoEncript {
    static Scanner sc = new Scanner(System.in);
    static String letras[][] = {{"0", "A", "B", "C", "D"},
                                {"1", "A", "B", "C", "D"},
                                {"2", "E", "F", "G", "H"},
                                {"3", "I", "J", "K", "L"},
                                {"4", "M", "N", "Ñ", "O"},
                                {"5", "P", "Q", "R", "S"},
                                {"6", "T", "U", "V", "W"},
                                {"7", "X", "Y", "Z", " "}
        }; // DICCIONARIO DE CONVERSIÓN
    
    public static void main(String[] args) {
        //clave -> clave para encriptar
        System.out.print("ESCRIBA PALABRA: ");
        String frase = sc.nextLine();
        System.out.print("CLAVE: ");
        int clave = sc.nextInt();

        while ((clave <= 99) || (clave > 900)) {
            System.out.println("CLAVE DEBE TENER 3 DÍGITOS Y DEBE SER MENOR QUE 900: ");
            clave = sc.nextInt();
        }
        
        System.out.println("");
        System.out.println("...");
        System.out.println("");
        System.out.println("CODIGO GENERADO: " + encrip(frase, clave));
        
    }
    
    // FUNCIÓN PARA ENCRIPTRAR
    public static String encrip(String frase, int clave) {
        String str_clave =  clave + "";
        int prt1, prt2;
        prt1 = Integer.parseInt(str_clave.substring(0, 2));
        prt2 = Integer.parseInt(str_clave.substring(2, 3));
        String cod = "";
        
        for (int i = 0; i < frase.length(); i++) {
            for (int j = 1; j <= 7; j++) {
                for (int k = 1; k <= 4; k++) {
                    // CONVIERTE CADA LETRA (Y ESPACIOS) EN SU CÓDIGO CORRESPONDIENTE
                    if (frase.substring(i, i + 1).equalsIgnoreCase(letras[j][k])) {
                        if (clave % 2 != 0) {
                            cod = cod + (j + prt2) + prt1 + letras[0][k]; cod = cod + "%%";
                        } else {
                            cod = cod + (j + prt1) + prt2 + letras[0][k]; cod = cod + "%";
                        }  
                    }
                    
                }
            }
        }
        
        return cod;
    }
    
    // FUNCIÓN PARA DESENCRIPTAR
    public static String desencrip(String cod, int clave) {
        String frase = "";
        
        for (int i = 0; i < cod.length(); i++) {
            
        }
        
        return frase;
    }
}