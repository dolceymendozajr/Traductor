package lab_final_dolcey_wilson;

import javax.swing.JOptionPane;

public class Cifrador extends javax.swing.JFrame {

    MetodoEncript encripaa = new MetodoEncript();
    EncriptarVigenere vigenere_metodo = new EncriptarVigenere();
    
    public Cifrador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        btn_Encriptar = new javax.swing.JButton();
        txt_Clave = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_Mensaje = new javax.swing.JTextArea();
        txt_Encriptado = new javax.swing.JTextField();
        txt_ERROR = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        op_EncripPropio = new javax.swing.JRadioButton();
        op_EncripVigenere = new javax.swing.JRadioButton();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cifrador");
        setLocation(new java.awt.Point(250, 250));
        setResizable(false);

        btn_Encriptar.setFont(new java.awt.Font("HP Simplified", 1, 18)); // NOI18N
        btn_Encriptar.setText("Cifrar");
        btn_Encriptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EncriptarActionPerformed(evt);
            }
        });

        txt_Clave.setFont(new java.awt.Font("HP Simplified Light", 0, 12)); // NOI18N
        txt_Clave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ClaveActionPerformed(evt);
            }
        });

        txt_Mensaje.setColumns(20);
        txt_Mensaje.setFont(new java.awt.Font("HP Simplified Light", 0, 14)); // NOI18N
        txt_Mensaje.setRows(5);
        jScrollPane1.setViewportView(txt_Mensaje);

        txt_Encriptado.setFont(new java.awt.Font("HP Simplified Light", 0, 14)); // NOI18N
        txt_Encriptado.setToolTipText("Texto encriptado");
        txt_Encriptado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_EncriptadoActionPerformed(evt);
            }
        });

        txt_ERROR.setFont(new java.awt.Font("HP Simplified Light", 2, 14)); // NOI18N
        txt_ERROR.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_ERROR.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel1.setFont(new java.awt.Font("HP Simplified Light", 1, 14)); // NOI18N
        jLabel1.setText("Clave:");

        jLabel2.setFont(new java.awt.Font("HP Simplified Light", 1, 14)); // NOI18N
        jLabel2.setText("Mensaje a cifrar:");

        jLabel3.setFont(new java.awt.Font("HP Simplified Light", 1, 14)); // NOI18N
        jLabel3.setText("Mensaje cifrado:");

        op_EncripPropio.setText("Propio");
        op_EncripPropio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Propio_op(evt);
            }
        });
        op_EncripPropio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op_EncripPropioActionPerformed(evt);
            }
        });

        op_EncripVigenere.setText("Vigenere");
        op_EncripVigenere.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Vigenere_op(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_ERROR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(184, 184, 184))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(txt_Clave, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(op_EncripVigenere)
                                .addComponent(op_EncripPropio)))
                        .addComponent(btn_Encriptar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_Encriptado, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {op_EncripPropio, op_EncripVigenere});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_Clave, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(op_EncripVigenere)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(op_EncripPropio))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(txt_ERROR, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Encriptar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_Encriptado, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {op_EncripPropio, op_EncripVigenere});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_EncriptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EncriptarActionPerformed
        txt_ERROR.setText("");
        int clave;

        try {
            if (txt_Clave.getText().isEmpty() && txt_Mensaje.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "No puedes dejar un campo vacío", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else if (op_EncripPropio.isSelected()) { // ENCRIPTADO PROPIO
                try {
                    if (!txt_Clave.getText().isEmpty() && !txt_Mensaje.getText().isEmpty()) {
                        try {
                            String cla = txt_Clave.getText();
                            clave = Integer.parseInt(cla);
                            if (clave > 99 && clave < 800) {
                                try {
                                    String frase = txt_Mensaje.getText();
                                    String encriptado = MetodoEncript.encrip(frase, clave); // INVOCAR A FUNCIÓN "encrip" DE LA CLASE "MetodoEncript" PARA ENCRIPTAR LA FRASE
                                    txt_Encriptado.setText(encriptado); // MOSTRAR TEXTO ENCRIPTADO 
                                } catch (Exception e) { txt_ERROR.setText("Hubo un error desconocido, inténtalo con otra clave o más tarde"); }
                            } else
                                txt_ERROR.setText("La clave debe ser mayor que 99 y menor que 800");
                        } catch (Exception e) {}
                    }
                } catch (Exception e) { }
            } else if (op_EncripVigenere.isSelected()) { // ENCRIPTADO POR VIGENERE
                try {
                    if (!txt_Clave.getText().isEmpty() && !txt_Mensaje.getText().isEmpty()) {
                        try {
                            try {
                                String cla = txt_Clave.getText();
                                String message = txt_Mensaje.getText();

                                txt_Encriptado.setText(vigenere_metodo.Encript(message, cla));                                        
                            } catch (Exception e) { txt_ERROR.setText("Hubo un error desconocido, inténtalo con otra clave o más tarde"); }
                        } catch (Exception e) {  }
                    }
                } catch (Exception e) {}
            } else
                JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una opción de cifrado :)", "ERROR", JOptionPane.ERROR_MESSAGE);

        } catch (Exception e) {}
    }//GEN-LAST:event_btn_EncriptarActionPerformed

    private void txt_EncriptadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_EncriptadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_EncriptadoActionPerformed

    private void op_EncripPropioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op_EncripPropioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_op_EncripPropioActionPerformed

    private void txt_ClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ClaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ClaveActionPerformed

    private void Vigenere_op(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Vigenere_op
        if (op_EncripPropio.isSelected()) {
            op_EncripPropio.setSelected(false);
        }
    }//GEN-LAST:event_Vigenere_op

    private void Propio_op(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Propio_op
        if (op_EncripVigenere.isSelected()) {
            op_EncripVigenere.setSelected(false);
        }
    }//GEN-LAST:event_Propio_op

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cifrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cifrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cifrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cifrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cifrador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btn_Encriptar;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton op_EncripPropio;
    private javax.swing.JRadioButton op_EncripVigenere;
    private javax.swing.JTextField txt_Clave;
    private javax.swing.JLabel txt_ERROR;
    private javax.swing.JTextField txt_Encriptado;
    private javax.swing.JTextArea txt_Mensaje;
    // End of variables declaration//GEN-END:variables
}

//class MetodoEncript {
//    static Scanner sc = new Scanner(System.in);
//    static String letras[][] = {{"0", "A", "B", "C", "D"},
//                                {"1", "A", "B", "C", "D"},
//                                {"2", "E", "F", "G", "H"},
//                                {"3", "I", "J", "K", "L"},
//                                {"4", "M", "N", "Ñ", "O"},
//                                {"5", "P", "Q", "R", "S"},
//                                {"6", "T", "U", "V", "W"},
//                                {"7", "X", "Y", "Z", " "}
//        }; // DICCIONARIO DE CONVERSIÓN
//    
//    public static void main(String[] args) {
//        //clave -> clave para encriptar
//        System.out.print("ESCRIBA PALABRA: "); String frase = sc.nextLine();
//        System.out.print("CLAVE: "); int clave = sc.nextInt();
//
//        while ((clave <= 99) || (clave > 900)) { System.out.println("CLAVE DEBE TENER 3 DÍGITOS Y DEBE SER MENOR QUE 900: "); clave = sc.nextInt(); }
//        
//        System.out.println(""); System.out.println("..."); System.out.println("");
//        System.out.println("CODIGO GENERADO: " + encrip(frase, clave));
//    }
//    
//    // FUNCIÓN PARA ENCRIPTRAR
//    public static String encrip(String frase, int clave) {
//        String str_clave =  clave + "";
//        int prt1, prt2;
//        prt1 = Integer.parseInt(str_clave.substring(0, 2));
//        prt2 = Integer.parseInt(str_clave.substring(2, 3));
//        String cod = "";
//        
//        for (int i = 0; i < frase.length(); i++) {
//            for (int j = 1; j <= 7; j++) {
//                for (int k = 1; k <= 4; k++) {
//                    // CONVIERTE CADA LETRA (Y ESPACIOS) EN SU CÓDIGO CORRESPONDIENTE :)
//                    if (frase.substring(i, i + 1).equalsIgnoreCase(letras[j][k])) {
//                        if (clave % 2 != 0) {
//                            cod = cod + (j + prt2) + prt1 + letras[0][k]; cod = cod + "//";
//                        } else { 
//                            cod = cod + (j + prt1) + prt2 + letras[0][k]; cod = cod + "\\";
//                        }  
//                    }
//                }
//            }
//        }
//        
//        return cod;
//    }
//}
